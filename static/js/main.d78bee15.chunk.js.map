{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","document","getElementById"],"mappings":"qVAGaA,G,MAAO,SAAAC,GAAK,OACxB,yBAAKC,UAAU,kBACd,yBACCC,IAAI,kBACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEJ,gCAAML,EAAMI,QAAQE,KAApB,KACA,+BAAKN,EAAMI,QAAQG,MAAnB,QCNWC,G,MAAW,SAAAR,GAAK,OAI5B,yBAAKC,UAAU,aACbD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,GAC9BA,EAAQE,YCRAM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,2BACCb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCGG,G,kBAtCd,aAAe,IAAD,8BACb,+CAEKC,MAAQ,CACZT,SAAU,GACVU,YAAa,IALD,E,iFASO,IAAD,OACnBC,MAAM,8CAEJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,+BAEjC,IAAD,SAK0BE,KAAKR,MAA/BT,EALA,EAKAA,SAAUU,EALV,EAKUA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAC/CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAEjD,OACC,yBAAK5B,UAAU,OACd,gDACA,kBAAC,EAAD,CACCY,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE1D,kBAAC,EAAD,CAAUxB,SAAUkB,S,GAjCNO,cCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d78bee15.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n\t<div className='card-container'>\n\t\t<img\n\t\t\talt='monster profile'\n\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n\t\t/>\n\t\t<h2> {props.monster.name} </h2>\n\t\t<p> {props.monster.email} </p>\n\t</div>\n);\n","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n\t// console.log(props);\n\t// use curly braces to signal to the program that rendering props.children will require the use of javascript:\n\n\t<div className='card-list'>\n\t\t{props.monsters.map(monster => (\n\t\t\t<Card key={monster.id} monster={monster}>\n\t\t\t\t{monster.name}\n\t\t\t</Card>\n\t\t))}\n\t</div>\n);\n","import React from 'react';\nimport './search.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n\t<input\n\t\tclassName='search'\n\t\ttype='search'\n\t\tplaceholder={placeholder}\n\t\tonChange={handleChange}\n\t/>\n);\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search/search.component';\nimport './App.css';\n\n// use classes instead of functional components when you need access to state\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t};\n\t}\n\t//life cycle method #1\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t// converts resules to JSON format that our JS can understand:\n\t\t\t.then(response => response.json())\n\t\t\t// gets the list of users and updates our state with the names as the \"body\":\n\t\t\t.then(users => this.setState({ monsters: users }));\n\t}\n\trender() {\n\t\t// filters out monsters based on user search\n\t\t// this destructuring is equivalent to:\n\t\t// const monsters = this.state.monsters;\n\t\t// const searchField = this.state.searchField;\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\thandleChange={e => this.setState({ searchField: e.target.value })}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters}></CardList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}